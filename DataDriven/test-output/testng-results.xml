<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Data Driven Basics" duration-ms="23739" started-at="2020-02-28T00:33:45 CST" finished-at="2020-02-28T00:34:09 CST">
    <groups>
    </groups>
    <test name="BankManager" duration-ms="22834" started-at="2020-02-28T00:33:45 CST" finished-at="2020-02-28T00:34:08 CST">
      <class name="com.led.testcases.BankManager">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.led.testcases.BankManager@120f102b]" name="BeforeClass" is-config="true" duration-ms="0" started-at="2020-02-28T00:33:45 CST" finished-at="2020-02-28T00:33:45 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="LogInAsBankManager()[pri:0, instance:com.led.testcases.BankManager@120f102b]" name="LogInAsBankManager" duration-ms="2663" started-at="2020-02-28T00:33:45 CST" finished-at="2020-02-28T00:33:48 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInAsBankManager -->
        <test-method status="FAIL" signature="LogInAsBankManager()[pri:0, instance:com.led.testcases.BankManager@120f102b]" name="LogInAsBankManager" duration-ms="20109" started-at="2020-02-28T00:33:48 CST" finished-at="2020-02-28T00:34:08 CST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.led.testcases.BankManager.LogInAsBankManager(BankManager.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogInAsBankManager -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.led.testcases.BankManager@120f102b]" name="AfterClass" is-config="true" duration-ms="1" started-at="2020-02-28T00:34:08 CST" finished-at="2020-02-28T00:34:08 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.led.testcases.BankManager -->
    </test> <!-- BankManager -->
    <test name="AddCustomerTest" duration-ms="867" started-at="2020-02-28T00:34:08 CST" finished-at="2020-02-28T00:34:09 CST">
      <class name="com.led.testcases.AddCustomerTest">
        <test-method status="PASS" signature="SetUp()[pri:0, instance:com.led.testcases.AddCustomerTest@29d89d5d]" name="SetUp" is-config="true" duration-ms="11346" started-at="2020-02-28T00:33:34 CST" finished-at="2020-02-28T00:33:45 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="BeforeClass2()[pri:0, instance:com.led.testcases.AddCustomerTest@29d89d5d]" name="BeforeClass2" is-config="true" duration-ms="0" started-at="2020-02-28T00:34:08 CST" finished-at="2020-02-28T00:34:08 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass2 -->
        <test-method status="PASS" signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.led.testcases.AddCustomerTest@29d89d5d]" name="addCustomer" duration-ms="115" started-at="2020-02-28T00:34:08 CST" data-provider="dp" finished-at="2020-02-28T00:34:08 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Warren]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ledda]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abs123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method status="PASS" signature="addCustomer(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.led.testcases.AddCustomerTest@29d89d5d]" name="addCustomer" duration-ms="68" started-at="2020-02-28T00:34:08 CST" data-provider="dp" finished-at="2020-02-28T00:34:08 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Warren]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ledda]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abs123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCustomer -->
        <test-method status="PASS" signature="AfterClass2()[pri:0, instance:com.led.testcases.AddCustomerTest@29d89d5d]" name="AfterClass2" is-config="true" duration-ms="652" started-at="2020-02-28T00:34:08 CST" finished-at="2020-02-28T00:34:09 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass2 -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:com.led.testcases.AddCustomerTest@29d89d5d]" name="TearDown" is-config="true" duration-ms="6230" started-at="2020-02-28T00:34:09 CST" finished-at="2020-02-28T00:34:15 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- com.led.testcases.AddCustomerTest -->
    </test> <!-- AddCustomerTest -->
  </suite> <!-- Data Driven Basics -->
</testng-results>
